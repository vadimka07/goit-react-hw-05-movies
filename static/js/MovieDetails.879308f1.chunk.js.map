{"version":3,"file":"static/js/MovieDetails.879308f1.chunk.js","mappings":"uQAQA,I,IAAA,EANA,YACI,OAD0B,EAARA,KACNC,KAAI,SAAAC,GACZ,OAAO,wBAAoBA,EAAMC,MAAjBD,EAAME,GACzB,GACJ,E,2BCLYC,EAAMC,EAAAA,EAAAA,IAAH,sEAKHC,EAAQD,EAAAA,EAAAA,IAAH,oN,2DC6DlB,MA1DA,WAAyB,IAAD,IACZE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAsCE,EAAAA,EAAAA,UAAS,MAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAEMC,EAAQ,qBADGC,EAAAA,EAAAA,MACSC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IASzC,IARAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAU,mCAAG,qGACMC,EAAAA,EAAAA,IAAgBX,GADtB,OACTY,EADS,OAEfR,EAAeQ,GAFA,2CAAH,qDAIhBF,IAAaG,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GAC3B,GAAE,CAACd,IAECG,EAAL,CAEA,IAAQc,EACJd,EADIc,cAAeC,EACnBf,EADmBe,aAAcC,EACjChB,EADiCgB,SAAUC,EAC3CjB,EAD2CiB,OAAQC,EACnDlB,EADmDkB,MAEvD,OACI,iCACI,SAACC,EAAA,EAAD,CAAQC,KAAMlB,KACd,UAACR,EAAD,YACI,SAACE,EAAD,WACI,gBACIyB,IACIP,EAAa,0CAC4BA,GACnCQ,EAEVC,IAAKL,OAGb,iBAAKM,UAAU,iBAAf,WACI,wBAAKN,KACL,cAAGM,UAAU,aAAb,SAA2BT,KAC3B,yBACI,4CAEJ,cAAGS,UAAU,cAAb,SAA4BR,KAC5B,oCACA,SAAC,EAAD,CAAY3B,KAAM4B,WAG1B,oDACA,2BACI,yBACI,SAAC,KAAD,CAAMQ,GAAG,OAAT,qBAEJ,yBACI,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGR,SAAC,EAAAC,SAAD,CAAUC,UAAU,yCAApB,UACI,SAAC,KAAD,QAvCY,CA2C3B,C","sources":["components/GenresList/GenresList.jsx","pages/MovieDetails/MoviesDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\n\nfunction GenresList({ list }) {\n    return list.map(genre => {\n        return <li key={genre.id}>{genre.name}</li>;\n    });\n}\n\nexport default GenresList;\n\nGenresList.propTypes = {\n    list: PropTypes.array,\n};\n","import styled from '@emotion/styled';\nexport const DIV = styled.div`\n    max-width: 950px;\n    margin-top: 20px;\n`;\n\nexport const Thumb = styled.div`\n    max-width: 500px;\n    border-radius: 8px;\n    overflow: hidden;\n    img {\n        max-width: 100%;\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n    }\n`;\n","import { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieDetails } from '../../services/api';\nimport { Suspense, useEffect, useState } from 'react';\nimport GenresList from '../../components/GenresList/GenresList';\nimport GoBack from '../../components/GoBack/GoBack';\nimport { DIV, Thumb } from './MoviesDetails.styled';\nimport noPhoto from '../../assets/images/no-image-500.png';\nimport PropTypes from 'prop-types';\n\nfunction MovieDetails() {\n    const { movieId } = useParams();\n    const [detailMovie, setDetailMovie] = useState(null);\n    const location = useLocation();\n    const backLink = location.state?.from ?? '/';\n    useEffect(() => {\n        const getDetails = async () => {\n            const result = await getMovieDetails(movieId);\n            setDetailMovie(result);\n        };\n        getDetails().catch(error => console.log(error));\n    }, [movieId]);\n\n    if (!detailMovie) return;\n\n    const { backdrop_path, vote_average, overview, genres, title } =\n        detailMovie;\n    return (\n        <>\n            <GoBack path={backLink} />\n            <DIV>\n                <Thumb>\n                    <img\n                        src={\n                            backdrop_path\n                                ? `https://image.tmdb.org/t/p/w500/${backdrop_path}`\n                                : noPhoto\n                        }\n                        alt={title}\n                    />\n                </Thumb>\n                <div className=\"container-text\">\n                    <h1>{title}</h1>\n                    <p className=\"user score\">{vote_average}</p>\n                    <h2>\n                        <strong>Overview</strong>\n                    </h2>\n                    <p className=\"description\">{overview}</p>\n                    <h2>Genres</h2>\n                    <GenresList list={genres} />\n                </div>\n            </DIV>\n            <h2>Additional information</h2>\n            <ul>\n                <li>\n                    <Link to=\"cast\">Cast</Link>\n                </li>\n                <li>\n                    <Link to=\"reviews\">Reviews</Link>\n                </li>\n            </ul>\n            <Suspense fallback={<div>Loading ...</div>}>\n                <Outlet />\n            </Suspense>\n        </>\n    );\n}\n\nexport default MovieDetails;\n\nMovieDetails.propTypes = {\n    path: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    list: PropTypes.array,\n};\n"],"names":["list","map","genre","name","id","DIV","styled","Thumb","movieId","useParams","useState","detailMovie","setDetailMovie","backLink","useLocation","state","from","useEffect","getDetails","getMovieDetails","result","catch","error","console","log","backdrop_path","vote_average","overview","genres","title","GoBack","path","src","noPhoto","alt","className","to","Suspense","fallback"],"sourceRoot":""}